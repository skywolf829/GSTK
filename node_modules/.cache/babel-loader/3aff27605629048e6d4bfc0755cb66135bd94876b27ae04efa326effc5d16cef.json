{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nexports.getPrefix = getPrefix;\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nfunction getPrefix() /*: string*/{\n  var _window$document;\n  let prop /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Ensure we're running in an environment where there is actually a global\n  // `window` obj\n  if (typeof window === 'undefined') return '';\n\n  // If we're in a pseudo-browser server-side environment, this access\n  // path may not exist, so bail out if it doesn't.\n  const style = (_window$document = window.document) === null || _window$document === void 0 || (_window$document = _window$document.documentElement) === null || _window$document === void 0 ? void 0 : _window$document.style;\n  if (!style) return '';\n  if (prop in style) return '';\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n  return '';\n}\nfunction browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\nfunction browserPrefixToStyle(prop /*: string*/, prefix /*: string*/) /*: string*/{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\nfunction kebabToTitleCase(str /*: string*/) /*: string*/{\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nvar _default = exports.default = getPrefix() /*: string*/;","map":{"version":3,"names":["Object","defineProperty","exports","value","browserPrefixToKey","browserPrefixToStyle","default","getPrefix","prefixes","_window$document","prop","arguments","length","undefined","window","style","document","documentElement","i","prefix","concat","kebabToTitleCase","toLowerCase","str","out","shouldCapitalize","toUpperCase","_default"],"sources":["C:/Users/Sky/Documents/GitHub/engineer-gpt-test/photoshop-like-ui-react/node_modules/react-draggable/build/cjs/utils/getPrefix.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.browserPrefixToKey = browserPrefixToKey;\nexports.browserPrefixToStyle = browserPrefixToStyle;\nexports.default = void 0;\nexports.getPrefix = getPrefix;\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nfunction getPrefix() /*: string*/{\n  var _window$document;\n  let prop /*: string*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n  // Ensure we're running in an environment where there is actually a global\n  // `window` obj\n  if (typeof window === 'undefined') return '';\n\n  // If we're in a pseudo-browser server-side environment, this access\n  // path may not exist, so bail out if it doesn't.\n  const style = (_window$document = window.document) === null || _window$document === void 0 || (_window$document = _window$document.documentElement) === null || _window$document === void 0 ? void 0 : _window$document.style;\n  if (!style) return '';\n  if (prop in style) return '';\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToKey(prop, prefixes[i]) in style) return prefixes[i];\n  }\n  return '';\n}\nfunction browserPrefixToKey(prop /*: string*/, prefix /*: string*/) /*: string*/{\n  return prefix ? \"\".concat(prefix).concat(kebabToTitleCase(prop)) : prop;\n}\nfunction browserPrefixToStyle(prop /*: string*/, prefix /*: string*/) /*: string*/{\n  return prefix ? \"-\".concat(prefix.toLowerCase(), \"-\").concat(prop) : prop;\n}\nfunction kebabToTitleCase(str /*: string*/) /*: string*/{\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nvar _default = exports.default = (getPrefix() /*: string*/);"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB;AAC/CF,OAAO,CAACG,oBAAoB,GAAGA,oBAAoB;AACnDH,OAAO,CAACI,OAAO,GAAG,KAAK,CAAC;AACxBJ,OAAO,CAACK,SAAS,GAAGA,SAAS;AAC7B,MAAMC,QAAQ,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC;AAC7C,SAASD,SAASA,CAAA,EAAG,YAAY;EAC/B,IAAIE,gBAAgB;EACpB,IAAIC,IAAI,CAAC,eAAeC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW;EACvG;EACA;EACA,IAAI,OAAOG,MAAM,KAAK,WAAW,EAAE,OAAO,EAAE;;EAE5C;EACA;EACA,MAAMC,KAAK,GAAG,CAACN,gBAAgB,GAAGK,MAAM,CAACE,QAAQ,MAAM,IAAI,IAAIP,gBAAgB,KAAK,KAAK,CAAC,IAAI,CAACA,gBAAgB,GAAGA,gBAAgB,CAACQ,eAAe,MAAM,IAAI,IAAIR,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACM,KAAK;EAC7N,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EACrB,IAAIL,IAAI,IAAIK,KAAK,EAAE,OAAO,EAAE;EAC5B,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,QAAQ,CAACI,MAAM,EAAEM,CAAC,EAAE,EAAE;IACxC,IAAId,kBAAkB,CAACM,IAAI,EAAEF,QAAQ,CAACU,CAAC,CAAC,CAAC,IAAIH,KAAK,EAAE,OAAOP,QAAQ,CAACU,CAAC,CAAC;EACxE;EACA,OAAO,EAAE;AACX;AACA,SAASd,kBAAkBA,CAACM,IAAI,CAAC,cAAcS,MAAM,CAAC,cAAc,YAAY;EAC9E,OAAOA,MAAM,GAAG,EAAE,CAACC,MAAM,CAACD,MAAM,CAAC,CAACC,MAAM,CAACC,gBAAgB,CAACX,IAAI,CAAC,CAAC,GAAGA,IAAI;AACzE;AACA,SAASL,oBAAoBA,CAACK,IAAI,CAAC,cAAcS,MAAM,CAAC,cAAc,YAAY;EAChF,OAAOA,MAAM,GAAG,GAAG,CAACC,MAAM,CAACD,MAAM,CAACG,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAACF,MAAM,CAACV,IAAI,CAAC,GAAGA,IAAI;AAC3E;AACA,SAASW,gBAAgBA,CAACE,GAAG,CAAC,cAAc,YAAY;EACtD,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,gBAAgB,GAAG,IAAI;EAC3B,KAAK,IAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,GAAG,CAACX,MAAM,EAAEM,CAAC,EAAE,EAAE;IACnC,IAAIO,gBAAgB,EAAE;MACpBD,GAAG,IAAID,GAAG,CAACL,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC;MAC3BD,gBAAgB,GAAG,KAAK;IAC1B,CAAC,MAAM,IAAIF,GAAG,CAACL,CAAC,CAAC,KAAK,GAAG,EAAE;MACzBO,gBAAgB,GAAG,IAAI;IACzB,CAAC,MAAM;MACLD,GAAG,IAAID,GAAG,CAACL,CAAC,CAAC;IACf;EACF;EACA,OAAOM,GAAG;AACZ;;AAEA;AACA;AACA;AACA,IAAIG,QAAQ,GAAGzB,OAAO,CAACI,OAAO,GAAIC,SAAS,CAAC,CAAC,CAAC,YAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}