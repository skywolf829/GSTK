{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canDragX = canDragX;\nexports.canDragY = canDragY;\nexports.createCoreData = createCoreData;\nexports.createDraggableData = createDraggableData;\nexports.getBoundPosition = getBoundPosition;\nexports.getControlPosition = getControlPosition;\nexports.snapToGrid = snapToGrid;\nvar _shims = require(\"./shims\");\nvar _domFns = require(\"./domFns\");\n/*:: import type Draggable from '../Draggable';*/\n/*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n/*:: import type DraggableCore from '../DraggableCore';*/\nfunction getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/{\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y];\n\n  // Clone new bounds\n  let {\n    bounds\n  } = draggable.props;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  const node = findDOMNode(draggable);\n  if (typeof bounds === 'string') {\n    const {\n      ownerDocument\n    } = node;\n    const ownerWindow = ownerDocument.defaultView;\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    const boundNodeEl /*: HTMLElement*/ = boundNode; // for Flow, can't seem to refine correctly\n    const nodeStyle = ownerWindow.getComputedStyle(node);\n    const boundNodeStyle = ownerWindow.getComputedStyle(boundNodeEl);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.marginLeft),\n      top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.marginTop),\n      right: (0, _domFns.innerWidth)(boundNodeEl) - (0, _domFns.outerWidth)(node) - node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingRight) - (0, _shims.int)(nodeStyle.marginRight),\n      bottom: (0, _domFns.innerHeight)(boundNodeEl) - (0, _domFns.outerHeight)(node) - node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingBottom) - (0, _shims.int)(nodeStyle.marginBottom)\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);\n  if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n  // But above left and top limits.\n  if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);\n  if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);\n  return [x, y];\n}\nfunction snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/{\n  const x = Math.round(pendingX / grid[0]) * grid[0];\n  const y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\nfunction canDragX(draggable /*: Draggable*/) /*: boolean*/{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\nfunction canDragY(draggable /*: Draggable*/) /*: boolean*/{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {x, y} positions from event.\nfunction getControlPosition(e /*: MouseTouchEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/{\n  const touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n  const node = findDOMNode(draggableCore);\n  // User can provide an offsetParent if desired.\n  const offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent, draggableCore.props.scale);\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nfunction createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/{\n  const isStart = !(0, _shims.isNum)(draggable.lastX);\n  const node = findDOMNode(draggable);\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x,\n      y\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node,\n      deltaX: x - draggable.lastX,\n      deltaY: y - draggable.lastY,\n      lastX: draggable.lastX,\n      lastY: draggable.lastY,\n      x,\n      y\n    };\n  }\n}\n\n// Create an data exposed by <Draggable>'s events\nfunction createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/{\n  const scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + coreData.deltaX / scale,\n    y: draggable.state.y + coreData.deltaY / scale,\n    deltaX: coreData.deltaX / scale,\n    deltaY: coreData.deltaY / scale,\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds /*: Bounds*/) /*: Bounds*/{\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\nfunction findDOMNode(draggable /*: Draggable | DraggableCore*/) /*: HTMLElement*/{\n  const node = draggable.findDOMNode();\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  }\n  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n  return node;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","canDragX","canDragY","createCoreData","createDraggableData","getBoundPosition","getControlPosition","snapToGrid","_shims","require","_domFns","draggable","x","y","props","bounds","cloneBounds","node","findDOMNode","ownerDocument","ownerWindow","defaultView","boundNode","parentNode","querySelector","HTMLElement","Error","boundNodeEl","nodeStyle","getComputedStyle","boundNodeStyle","left","offsetLeft","int","paddingLeft","marginLeft","top","offsetTop","paddingTop","marginTop","right","innerWidth","outerWidth","paddingRight","marginRight","bottom","innerHeight","outerHeight","paddingBottom","marginBottom","isNum","Math","min","max","grid","pendingX","pendingY","round","axis","e","touchIdentifier","draggableCore","touchObj","getTouch","offsetParent","body","offsetXYFromParent","scale","isStart","lastX","deltaX","deltaY","lastY","coreData","state"],"sources":["C:/Users/Sky/Documents/GitHub/engineer-gpt-test/photoshop-like-ui-react/node_modules/react-draggable/build/cjs/utils/positionFns.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canDragX = canDragX;\nexports.canDragY = canDragY;\nexports.createCoreData = createCoreData;\nexports.createDraggableData = createDraggableData;\nexports.getBoundPosition = getBoundPosition;\nexports.getControlPosition = getControlPosition;\nexports.snapToGrid = snapToGrid;\nvar _shims = require(\"./shims\");\nvar _domFns = require(\"./domFns\");\n/*:: import type Draggable from '../Draggable';*/\n/*:: import type {Bounds, ControlPosition, DraggableData, MouseTouchEvent} from './types';*/\n/*:: import type DraggableCore from '../DraggableCore';*/\nfunction getBoundPosition(draggable /*: Draggable*/, x /*: number*/, y /*: number*/) /*: [number, number]*/{\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [x, y];\n\n  // Clone new bounds\n  let {\n    bounds\n  } = draggable.props;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  const node = findDOMNode(draggable);\n  if (typeof bounds === 'string') {\n    const {\n      ownerDocument\n    } = node;\n    const ownerWindow = ownerDocument.defaultView;\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = ownerDocument.querySelector(bounds);\n    }\n    if (!(boundNode instanceof ownerWindow.HTMLElement)) {\n      throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    const boundNodeEl /*: HTMLElement*/ = boundNode; // for Flow, can't seem to refine correctly\n    const nodeStyle = ownerWindow.getComputedStyle(node);\n    const boundNodeStyle = ownerWindow.getComputedStyle(boundNodeEl);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingLeft) + (0, _shims.int)(nodeStyle.marginLeft),\n      top: -node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingTop) + (0, _shims.int)(nodeStyle.marginTop),\n      right: (0, _domFns.innerWidth)(boundNodeEl) - (0, _domFns.outerWidth)(node) - node.offsetLeft + (0, _shims.int)(boundNodeStyle.paddingRight) - (0, _shims.int)(nodeStyle.marginRight),\n      bottom: (0, _domFns.innerHeight)(boundNodeEl) - (0, _domFns.outerHeight)(node) - node.offsetTop + (0, _shims.int)(boundNodeStyle.paddingBottom) - (0, _shims.int)(nodeStyle.marginBottom)\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if ((0, _shims.isNum)(bounds.right)) x = Math.min(x, bounds.right);\n  if ((0, _shims.isNum)(bounds.bottom)) y = Math.min(y, bounds.bottom);\n\n  // But above left and top limits.\n  if ((0, _shims.isNum)(bounds.left)) x = Math.max(x, bounds.left);\n  if ((0, _shims.isNum)(bounds.top)) y = Math.max(y, bounds.top);\n  return [x, y];\n}\nfunction snapToGrid(grid /*: [number, number]*/, pendingX /*: number*/, pendingY /*: number*/) /*: [number, number]*/{\n  const x = Math.round(pendingX / grid[0]) * grid[0];\n  const y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\nfunction canDragX(draggable /*: Draggable*/) /*: boolean*/{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\nfunction canDragY(draggable /*: Draggable*/) /*: boolean*/{\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {x, y} positions from event.\nfunction getControlPosition(e /*: MouseTouchEvent*/, touchIdentifier /*: ?number*/, draggableCore /*: DraggableCore*/) /*: ?ControlPosition*/{\n  const touchObj = typeof touchIdentifier === 'number' ? (0, _domFns.getTouch)(e, touchIdentifier) : null;\n  if (typeof touchIdentifier === 'number' && !touchObj) return null; // not the right touch\n  const node = findDOMNode(draggableCore);\n  // User can provide an offsetParent if desired.\n  const offsetParent = draggableCore.props.offsetParent || node.offsetParent || node.ownerDocument.body;\n  return (0, _domFns.offsetXYFromParent)(touchObj || e, offsetParent, draggableCore.props.scale);\n}\n\n// Create an data object exposed by <DraggableCore>'s events\nfunction createCoreData(draggable /*: DraggableCore*/, x /*: number*/, y /*: number*/) /*: DraggableData*/{\n  const isStart = !(0, _shims.isNum)(draggable.lastX);\n  const node = findDOMNode(draggable);\n  if (isStart) {\n    // If this is our first move, use the x and y as last coords.\n    return {\n      node,\n      deltaX: 0,\n      deltaY: 0,\n      lastX: x,\n      lastY: y,\n      x,\n      y\n    };\n  } else {\n    // Otherwise calculate proper values.\n    return {\n      node,\n      deltaX: x - draggable.lastX,\n      deltaY: y - draggable.lastY,\n      lastX: draggable.lastX,\n      lastY: draggable.lastY,\n      x,\n      y\n    };\n  }\n}\n\n// Create an data exposed by <Draggable>'s events\nfunction createDraggableData(draggable /*: Draggable*/, coreData /*: DraggableData*/) /*: DraggableData*/{\n  const scale = draggable.props.scale;\n  return {\n    node: coreData.node,\n    x: draggable.state.x + coreData.deltaX / scale,\n    y: draggable.state.y + coreData.deltaY / scale,\n    deltaX: coreData.deltaX / scale,\n    deltaY: coreData.deltaY / scale,\n    lastX: draggable.state.x,\n    lastY: draggable.state.y\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds /*: Bounds*/) /*: Bounds*/{\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\nfunction findDOMNode(draggable /*: Draggable | DraggableCore*/) /*: HTMLElement*/{\n  const node = draggable.findDOMNode();\n  if (!node) {\n    throw new Error('<DraggableCore>: Unmounted during event!');\n  }\n  // $FlowIgnore we can't assert on HTMLElement due to tests... FIXME\n  return node;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}