{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sky\\\\Documents\\\\GitHub\\\\engineer-gpt-test\\\\photoshop-like-ui-react\\\\src\\\\components\\\\Toolbar.js\",\n  _s = $RefreshSig$();\n// MyComponent.js\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaintBrush, faEraser, faFont } from '@fortawesome/free-solid-svg-icons';\nimport Draggable from 'react-draggable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToolBar = () => {\n  _s();\n  // State data\n  const [selectedTool, setSelectedTool] = useState('');\n\n  // Position\n  const [position, setPosition] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // The tools\n  const tools = [{\n    id: 'brush',\n    icon: faPaintBrush,\n    name: 'Brush'\n  }, {\n    id: 'eraser',\n    icon: faEraser,\n    name: 'Eraser'\n  }, {\n    id: 'text',\n    icon: faFont,\n    name: 'Text'\n  }];\n  const handleToolClick = toolId => {\n    setSelectedTool(toolId);\n    // You can extend this method to change canvas behavior based on the selected tool\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    defaultPosition: defaultPosition,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: tools.map(tool => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `tool-icon ${selectedTool === tool.id ? 'selected' : ''}`,\n        onClick: () => handleToolClick(tool.id),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: tool.icon,\n          title: tool.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)\n      }, tool.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ToolBar, \"Mfg/ZLD1EDs7LOG7qryZvNsjz+g=\");\n_c = ToolBar;\nexport default ToolBar;\nvar _c;\n$RefreshReg$(_c, \"ToolBar\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faPaintBrush","faEraser","faFont","Draggable","jsxDEV","_jsxDEV","ToolBar","_s","selectedTool","setSelectedTool","position","setPosition","x","y","tools","id","icon","name","handleToolClick","toolId","defaultPosition","children","className","map","tool","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sky/Documents/GitHub/engineer-gpt-test/photoshop-like-ui-react/src/components/Toolbar.js"],"sourcesContent":["\r\n\r\n// MyComponent.js\r\nimport React, {useState} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaintBrush, faEraser, faFont} from '@fortawesome/free-solid-svg-icons';\r\nimport Draggable from 'react-draggable';\r\n\r\nconst ToolBar = () => {\r\n    // State data\r\n    const [selectedTool, setSelectedTool] = useState('');\r\n\r\n    // Position\r\n    const [position, setPosition] = useState({ x: 0, y: 0 });\r\n    \r\n    // The tools\r\n    const tools = [\r\n        { id: 'brush', icon: faPaintBrush, name: 'Brush' },\r\n        { id: 'eraser', icon: faEraser, name: 'Eraser' },\r\n        { id: 'text', icon: faFont, name: 'Text' },\r\n    ];\r\n\r\n\r\n    const handleToolClick = (toolId) => {\r\n        setSelectedTool(toolId);\r\n        // You can extend this method to change canvas behavior based on the selected tool\r\n    };\r\n    return (\r\n        <Draggable defaultPosition={defaultPosition}>\r\n        <div className=\"toolbar\">\r\n          {tools.map((tool) => (\r\n            <div key={tool.id} className={`tool-icon ${selectedTool === tool.id ? 'selected' : ''}`} onClick={() => handleToolClick(tool.id)}>\r\n              <FontAwesomeIcon icon={tool.icon} title={tool.name} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Draggable>\r\n    );\r\n};\r\n\r\nexport default ToolBar;\r\n\r\n\r\n  "],"mappings":";;AAEA;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,YAAY,EAAEC,QAAQ,EAAEC,MAAM,QAAO,mCAAmC;AACjF,OAAOC,SAAS,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IAAEc,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;;EAExD;EACA,MAAMC,KAAK,GAAG,CACV;IAAEC,EAAE,EAAE,OAAO;IAAEC,IAAI,EAAEhB,YAAY;IAAEiB,IAAI,EAAE;EAAQ,CAAC,EAClD;IAAEF,EAAE,EAAE,QAAQ;IAAEC,IAAI,EAAEf,QAAQ;IAAEgB,IAAI,EAAE;EAAS,CAAC,EAChD;IAAEF,EAAE,EAAE,MAAM;IAAEC,IAAI,EAAEd,MAAM;IAAEe,IAAI,EAAE;EAAO,CAAC,CAC7C;EAGD,MAAMC,eAAe,GAAIC,MAAM,IAAK;IAChCV,eAAe,CAACU,MAAM,CAAC;IACvB;EACJ,CAAC;EACD,oBACId,OAAA,CAACF,SAAS;IAACiB,eAAe,EAAEA,eAAgB;IAAAC,QAAA,eAC5ChB,OAAA;MAAKiB,SAAS,EAAC,SAAS;MAAAD,QAAA,EACrBP,KAAK,CAACS,GAAG,CAAEC,IAAI,iBACdnB,OAAA;QAAmBiB,SAAS,EAAG,aAAYd,YAAY,KAAKgB,IAAI,CAACT,EAAE,GAAG,UAAU,GAAG,EAAG,EAAE;QAACU,OAAO,EAAEA,CAAA,KAAMP,eAAe,CAACM,IAAI,CAACT,EAAE,CAAE;QAAAM,QAAA,eAC/HhB,OAAA,CAACN,eAAe;UAACiB,IAAI,EAAEQ,IAAI,CAACR,IAAK;UAACU,KAAK,EAAEF,IAAI,CAACP;QAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GAD9CN,IAAI,CAACT,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAElB,CAAC;AAACvB,EAAA,CA9BID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAgCb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}