{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _domFns = require(\"./utils/domFns\");\nvar _positionFns = require(\"./utils/positionFns\");\nvar _shims = require(\"./utils/shims\");\nvar _log = _interopRequireDefault(require(\"./utils/log\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n/*:: import type {Element as ReactElement} from 'react';*/\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n/*:: export type DraggableData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number,\n};*/\n/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void | false;*/\n/*:: export type ControlPosition = {x: number, y: number};*/\n/*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n/*:: export type DraggableCoreDefaultProps = {\n  allowAnyClick: boolean,\n  disabled: boolean,\n  enableUserSelectHack: boolean,\n  onStart: DraggableEventHandler,\n  onDrag: DraggableEventHandler,\n  onStop: DraggableEventHandler,\n  onMouseDown: (e: MouseEvent) => void,\n  scale: number,\n};*/\n/*:: export type DraggableCoreProps = {\n  ...DraggableCoreDefaultProps,\n  cancel: string,\n  children: ReactElement<any>,\n  offsetParent: HTMLElement,\n  grid: [number, number],\n  handle: string,\n  nodeRef?: ?React.ElementRef<any>,\n};*/\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nclass DraggableCore extends React.Component /*:: <DraggableCoreProps>*/ {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"dragging\", false);\n    // Used while dragging to determine deltas.\n    _defineProperty(this, \"lastX\", NaN);\n    _defineProperty(this, \"lastY\", NaN);\n    _defineProperty(this, \"touchIdentifier\", null);\n    _defineProperty(this, \"mounted\", false);\n    _defineProperty(this, \"handleDragStart\", e => {\n      // Make it possible to attach event handlers on top of this one.\n      this.props.onMouseDown(e);\n\n      // Only accept left-clicks.\n      if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n      // Get nodes. Be sure to grab relative document (could be iframed)\n      const thisNode = this.findDOMNode();\n      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n        throw new Error('<DraggableCore> not mounted on DragStart!');\n      }\n      const {\n        ownerDocument\n      } = thisNode;\n\n      // Short circuit if handle or cancel prop was provided and selector doesn't match.\n      if (this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || this.props.handle && !(0, _domFns.matchesSelectorAndParentsTo)(e.target, this.props.handle, thisNode) || this.props.cancel && (0, _domFns.matchesSelectorAndParentsTo)(e.target, this.props.cancel, thisNode)) {\n        return;\n      }\n\n      // Prevent scrolling on mobile devices, like ipad/iphone.\n      // Important that this is after handle/cancel.\n      if (e.type === 'touchstart') e.preventDefault();\n\n      // Set touch identifier in component state if this is a touch event. This allows us to\n      // distinguish between individual touches on multitouch screens by identifying which\n      // touchpoint was set to this element.\n      const touchIdentifier = (0, _domFns.getTouchIdentifier)(e);\n      this.touchIdentifier = touchIdentifier;\n\n      // Get the current drag point from the event. This is used as the offset.\n      const position = (0, _positionFns.getControlPosition)(e, touchIdentifier, this);\n      if (position == null) return; // not possible but satisfies flow\n      const {\n        x,\n        y\n      } = position;\n\n      // Create an event object with all the data parents need to make a decision here.\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n      (0, _log.default)('DraggableCore: handleDragStart: %j', coreEvent);\n\n      // Call event handler. If it returns explicit false, cancel.\n      (0, _log.default)('calling', this.props.onStart);\n      const shouldUpdate = this.props.onStart(e, coreEvent);\n      if (shouldUpdate === false || this.mounted === false) return;\n\n      // Add a style to the body to disable user-select. This prevents text from\n      // being selected all over the page.\n      if (this.props.enableUserSelectHack) (0, _domFns.addUserSelectStyles)(ownerDocument);\n\n      // Initiate dragging. Set the current x and y as offsets\n      // so we know how much we've moved during the drag. This allows us\n      // to drag elements around even if they have been moved, without issue.\n      this.dragging = true;\n      this.lastX = x;\n      this.lastY = y;\n\n      // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n      // this element. We use different events depending on whether or not we have detected that this\n      // is a touch-capable device.\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.move, this.handleDrag);\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.stop, this.handleDragStop);\n    });\n    _defineProperty(this, \"handleDrag\", e => {\n      // Get the current drag point from the event. This is used as the offset.\n      const position = (0, _positionFns.getControlPosition)(e, this.touchIdentifier, this);\n      if (position == null) return;\n      let {\n        x,\n        y\n      } = position;\n\n      // Snap to grid if prop has been provided\n      if (Array.isArray(this.props.grid)) {\n        let deltaX = x - this.lastX,\n          deltaY = y - this.lastY;\n        [deltaX, deltaY] = (0, _positionFns.snapToGrid)(this.props.grid, deltaX, deltaY);\n        if (!deltaX && !deltaY) return; // skip useless drag\n        x = this.lastX + deltaX, y = this.lastY + deltaY;\n      }\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n      (0, _log.default)('DraggableCore: handleDrag: %j', coreEvent);\n\n      // Call event handler. If it returns explicit false, trigger end.\n      const shouldUpdate = this.props.onDrag(e, coreEvent);\n      if (shouldUpdate === false || this.mounted === false) {\n        try {\n          // $FlowIgnore\n          this.handleDragStop(new MouseEvent('mouseup'));\n        } catch (err) {\n          // Old browsers\n          const event = document.createEvent('MouseEvents') /*: any*/ /*: MouseTouchEvent*/;\n          // I see why this insanity was deprecated\n          // $FlowIgnore\n          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n          this.handleDragStop(event);\n        }\n        return;\n      }\n      this.lastX = x;\n      this.lastY = y;\n    });\n    _defineProperty(this, \"handleDragStop\", e => {\n      if (!this.dragging) return;\n      const position = (0, _positionFns.getControlPosition)(e, this.touchIdentifier, this);\n      if (position == null) return;\n      let {\n        x,\n        y\n      } = position;\n\n      // Snap to grid if prop has been provided\n      if (Array.isArray(this.props.grid)) {\n        let deltaX = x - this.lastX || 0;\n        let deltaY = y - this.lastY || 0;\n        [deltaX, deltaY] = (0, _positionFns.snapToGrid)(this.props.grid, deltaX, deltaY);\n        x = this.lastX + deltaX, y = this.lastY + deltaY;\n      }\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n\n      // Call event handler\n      const shouldContinue = this.props.onStop(e, coreEvent);\n      if (shouldContinue === false || this.mounted === false) return false;\n      const thisNode = this.findDOMNode();\n      if (thisNode) {\n        // Remove user-select hack\n        if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(thisNode.ownerDocument);\n      }\n      (0, _log.default)('DraggableCore: handleDragStop: %j', coreEvent);\n\n      // Reset the el.\n      this.dragging = false;\n      this.lastX = NaN;\n      this.lastY = NaN;\n      if (thisNode) {\n        // Remove event handlers\n        (0, _log.default)('DraggableCore: Removing handlers');\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.move, this.handleDrag);\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.stop, this.handleDragStop);\n      }\n    });\n    _defineProperty(this, \"onMouseDown\", e => {\n      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n      return this.handleDragStart(e);\n    });\n    _defineProperty(this, \"onMouseUp\", e => {\n      dragEventFor = eventsFor.mouse;\n      return this.handleDragStop(e);\n    });\n    // Same as onMouseDown (start drag), but now consider this a touch device.\n    _defineProperty(this, \"onTouchStart\", e => {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return this.handleDragStart(e);\n    });\n    _defineProperty(this, \"onTouchEnd\", e => {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return this.handleDragStop(e);\n    });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    // Touch handlers must be added with {passive: false} to be cancelable.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    const thisNode = this.findDOMNode();\n    if (thisNode) {\n      (0, _domFns.addEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n        passive: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    const thisNode = this.findDOMNode();\n    if (thisNode) {\n      const {\n        ownerDocument\n      } = thisNode;\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.move, this.handleDrag);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n      (0, _domFns.removeEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n        passive: false\n      });\n      if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(ownerDocument);\n    }\n  }\n\n  // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n  // the underlying DOM node ourselves. See the README for more information.\n  findDOMNode() /*: ?HTMLElement*/{\n    var _this$props, _this$props2;\n    return (_this$props = this.props) !== null && _this$props !== void 0 && _this$props.nodeRef ? (_this$props2 = this.props) === null || _this$props2 === void 0 || (_this$props2 = _this$props2.nodeRef) === null || _this$props2 === void 0 ? void 0 : _this$props2.current : _reactDom.default.findDOMNode(this);\n  }\n  render() /*: React.Element<any>*/{\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return /*#__PURE__*/React.cloneElement(React.Children.only(this.props.children), {\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      // onTouchStart is added on `componentDidMount` so they can be added with\n      // {passive: false}, which allows it to cancel. See\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\nexports.default = DraggableCore;\n_defineProperty(DraggableCore, \"displayName\", 'DraggableCore');\n_defineProperty(DraggableCore, \"propTypes\", {\n  /**\n   * `allowAnyClick` allows dragging using any mouse button.\n   * By default, we only accept the left button.\n   *\n   * Defaults to `false`.\n   */\n  allowAnyClick: _propTypes.default.bool,\n  children: _propTypes.default.node.isRequired,\n  /**\n   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n   * with the exception of `onMouseDown`, will not fire.\n   */\n  disabled: _propTypes.default.bool,\n  /**\n   * By default, we add 'user-select:none' attributes to the document body\n   * to prevent ugly text selection during drag. If this is causing problems\n   * for your app, set this to `false`.\n   */\n  enableUserSelectHack: _propTypes.default.bool,\n  /**\n   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n   * instead of using the parent node.\n   */\n  offsetParent: function (props /*: DraggableCoreProps*/, propName /*: $Keys<DraggableCoreProps>*/) {\n    if (props[propName] && props[propName].nodeType !== 1) {\n      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n    }\n  },\n  /**\n   * `grid` specifies the x and y that dragging should snap to.\n   */\n  grid: _propTypes.default.arrayOf(_propTypes.default.number),\n  /**\n   * `handle` specifies a selector to be used as the handle that initiates drag.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable handle=\".handle\">\n   *              <div>\n   *                  <div className=\"handle\">Click me to drag</div>\n   *                  <div>This is some other content</div>\n   *              </div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  handle: _propTypes.default.string,\n  /**\n   * `cancel` specifies a selector to be used to prevent drag initialization.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *           return(\n   *               <Draggable cancel=\".cancel\">\n   *                   <div>\n   *                     <div className=\"cancel\">You can't drag from here</div>\n   *                     <div>Dragging here works fine</div>\n   *                   </div>\n   *               </Draggable>\n   *           );\n   *       }\n   *   });\n   * ```\n   */\n  cancel: _propTypes.default.string,\n  /* If running in React Strict mode, ReactDOM.findDOMNode() is deprecated.\n   * Unfortunately, in order for <Draggable> to work properly, we need raw access\n   * to the underlying DOM node. If you want to avoid the warning, pass a `nodeRef`\n   * as in this example:\n   *\n   * function MyComponent() {\n   *   const nodeRef = React.useRef(null);\n   *   return (\n   *     <Draggable nodeRef={nodeRef}>\n   *       <div ref={nodeRef}>Example Target</div>\n   *     </Draggable>\n   *   );\n   * }\n   *\n   * This can be used for arbitrarily nested components, so long as the ref ends up\n   * pointing to the actual child DOM node and not a custom component.\n   */\n  nodeRef: _propTypes.default.object,\n  /**\n   * Called when dragging starts.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onStart: _propTypes.default.func,\n  /**\n   * Called while dragging.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onDrag: _propTypes.default.func,\n  /**\n   * Called when dragging stops.\n   * If this function returns the boolean false, the drag will remain active.\n   */\n  onStop: _propTypes.default.func,\n  /**\n   * A workaround option which can be passed if onMouseDown needs to be accessed,\n   * since it'll always be blocked (as there is internal use of onMouseDown)\n   */\n  onMouseDown: _propTypes.default.func,\n  /**\n   * `scale`, if set, applies scaling while dragging an element\n   */\n  scale: _propTypes.default.number,\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n});\n_defineProperty(DraggableCore, \"defaultProps\", {\n  allowAnyClick: false,\n  // by default only accept left click\n  disabled: false,\n  enableUserSelectHack: true,\n  onStart: function () {},\n  onDrag: function () {},\n  onStop: function () {},\n  onMouseDown: function () {},\n  scale: 1\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","default","React","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_reactDom","_domFns","_positionFns","_shims","_log","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_defineProperty","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","eventsFor","touch","start","move","stop","mouse","dragEventFor","DraggableCore","Component","constructor","arguments","NaN","e","props","onMouseDown","allowAnyClick","button","thisNode","findDOMNode","ownerDocument","body","Error","disabled","target","defaultView","Node","handle","matchesSelectorAndParentsTo","cancel","type","preventDefault","touchIdentifier","getTouchIdentifier","position","getControlPosition","x","y","coreEvent","createCoreData","onStart","shouldUpdate","mounted","enableUserSelectHack","addUserSelectStyles","dragging","lastX","lastY","addEvent","handleDrag","handleDragStop","Array","isArray","grid","deltaX","deltaY","snapToGrid","onDrag","MouseEvent","err","event","document","createEvent","initMouseEvent","window","shouldContinue","onStop","removeUserSelectStyles","removeEvent","handleDragStart","componentDidMount","onTouchStart","passive","componentWillUnmount","_this$props","_this$props2","nodeRef","current","render","cloneElement","Children","only","children","onMouseUp","onTouchEnd","bool","node","isRequired","offsetParent","propName","nodeType","arrayOf","number","string","object","func","scale","className","dontSetMe","style","transform"],"sources":["C:/Users/Sky/Documents/GitHub/engineer-gpt-test/photoshop-like-ui-react/node_modules/react-draggable/build/cjs/DraggableCore.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _domFns = require(\"./utils/domFns\");\nvar _positionFns = require(\"./utils/positionFns\");\nvar _shims = require(\"./utils/shims\");\nvar _log = _interopRequireDefault(require(\"./utils/log\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n/*:: import type {EventHandler, MouseTouchEvent} from './utils/types';*/\n/*:: import type {Element as ReactElement} from 'react';*/\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n/*:: export type DraggableData = {\n  node: HTMLElement,\n  x: number, y: number,\n  deltaX: number, deltaY: number,\n  lastX: number, lastY: number,\n};*/\n/*:: export type DraggableEventHandler = (e: MouseEvent, data: DraggableData) => void | false;*/\n/*:: export type ControlPosition = {x: number, y: number};*/\n/*:: export type PositionOffsetControlPosition = {x: number|string, y: number|string};*/\n/*:: export type DraggableCoreDefaultProps = {\n  allowAnyClick: boolean,\n  disabled: boolean,\n  enableUserSelectHack: boolean,\n  onStart: DraggableEventHandler,\n  onDrag: DraggableEventHandler,\n  onStop: DraggableEventHandler,\n  onMouseDown: (e: MouseEvent) => void,\n  scale: number,\n};*/\n/*:: export type DraggableCoreProps = {\n  ...DraggableCoreDefaultProps,\n  cancel: string,\n  children: ReactElement<any>,\n  offsetParent: HTMLElement,\n  grid: [number, number],\n  handle: string,\n  nodeRef?: ?React.ElementRef<any>,\n};*/\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nclass DraggableCore extends React.Component /*:: <DraggableCoreProps>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"dragging\", false);\n    // Used while dragging to determine deltas.\n    _defineProperty(this, \"lastX\", NaN);\n    _defineProperty(this, \"lastY\", NaN);\n    _defineProperty(this, \"touchIdentifier\", null);\n    _defineProperty(this, \"mounted\", false);\n    _defineProperty(this, \"handleDragStart\", e => {\n      // Make it possible to attach event handlers on top of this one.\n      this.props.onMouseDown(e);\n\n      // Only accept left-clicks.\n      if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n      // Get nodes. Be sure to grab relative document (could be iframed)\n      const thisNode = this.findDOMNode();\n      if (!thisNode || !thisNode.ownerDocument || !thisNode.ownerDocument.body) {\n        throw new Error('<DraggableCore> not mounted on DragStart!');\n      }\n      const {\n        ownerDocument\n      } = thisNode;\n\n      // Short circuit if handle or cancel prop was provided and selector doesn't match.\n      if (this.props.disabled || !(e.target instanceof ownerDocument.defaultView.Node) || this.props.handle && !(0, _domFns.matchesSelectorAndParentsTo)(e.target, this.props.handle, thisNode) || this.props.cancel && (0, _domFns.matchesSelectorAndParentsTo)(e.target, this.props.cancel, thisNode)) {\n        return;\n      }\n\n      // Prevent scrolling on mobile devices, like ipad/iphone.\n      // Important that this is after handle/cancel.\n      if (e.type === 'touchstart') e.preventDefault();\n\n      // Set touch identifier in component state if this is a touch event. This allows us to\n      // distinguish between individual touches on multitouch screens by identifying which\n      // touchpoint was set to this element.\n      const touchIdentifier = (0, _domFns.getTouchIdentifier)(e);\n      this.touchIdentifier = touchIdentifier;\n\n      // Get the current drag point from the event. This is used as the offset.\n      const position = (0, _positionFns.getControlPosition)(e, touchIdentifier, this);\n      if (position == null) return; // not possible but satisfies flow\n      const {\n        x,\n        y\n      } = position;\n\n      // Create an event object with all the data parents need to make a decision here.\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n      (0, _log.default)('DraggableCore: handleDragStart: %j', coreEvent);\n\n      // Call event handler. If it returns explicit false, cancel.\n      (0, _log.default)('calling', this.props.onStart);\n      const shouldUpdate = this.props.onStart(e, coreEvent);\n      if (shouldUpdate === false || this.mounted === false) return;\n\n      // Add a style to the body to disable user-select. This prevents text from\n      // being selected all over the page.\n      if (this.props.enableUserSelectHack) (0, _domFns.addUserSelectStyles)(ownerDocument);\n\n      // Initiate dragging. Set the current x and y as offsets\n      // so we know how much we've moved during the drag. This allows us\n      // to drag elements around even if they have been moved, without issue.\n      this.dragging = true;\n      this.lastX = x;\n      this.lastY = y;\n\n      // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n      // this element. We use different events depending on whether or not we have detected that this\n      // is a touch-capable device.\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.move, this.handleDrag);\n      (0, _domFns.addEvent)(ownerDocument, dragEventFor.stop, this.handleDragStop);\n    });\n    _defineProperty(this, \"handleDrag\", e => {\n      // Get the current drag point from the event. This is used as the offset.\n      const position = (0, _positionFns.getControlPosition)(e, this.touchIdentifier, this);\n      if (position == null) return;\n      let {\n        x,\n        y\n      } = position;\n\n      // Snap to grid if prop has been provided\n      if (Array.isArray(this.props.grid)) {\n        let deltaX = x - this.lastX,\n          deltaY = y - this.lastY;\n        [deltaX, deltaY] = (0, _positionFns.snapToGrid)(this.props.grid, deltaX, deltaY);\n        if (!deltaX && !deltaY) return; // skip useless drag\n        x = this.lastX + deltaX, y = this.lastY + deltaY;\n      }\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n      (0, _log.default)('DraggableCore: handleDrag: %j', coreEvent);\n\n      // Call event handler. If it returns explicit false, trigger end.\n      const shouldUpdate = this.props.onDrag(e, coreEvent);\n      if (shouldUpdate === false || this.mounted === false) {\n        try {\n          // $FlowIgnore\n          this.handleDragStop(new MouseEvent('mouseup'));\n        } catch (err) {\n          // Old browsers\n          const event = ((document.createEvent('MouseEvents') /*: any*/) /*: MouseTouchEvent*/);\n          // I see why this insanity was deprecated\n          // $FlowIgnore\n          event.initMouseEvent('mouseup', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n          this.handleDragStop(event);\n        }\n        return;\n      }\n      this.lastX = x;\n      this.lastY = y;\n    });\n    _defineProperty(this, \"handleDragStop\", e => {\n      if (!this.dragging) return;\n      const position = (0, _positionFns.getControlPosition)(e, this.touchIdentifier, this);\n      if (position == null) return;\n      let {\n        x,\n        y\n      } = position;\n\n      // Snap to grid if prop has been provided\n      if (Array.isArray(this.props.grid)) {\n        let deltaX = x - this.lastX || 0;\n        let deltaY = y - this.lastY || 0;\n        [deltaX, deltaY] = (0, _positionFns.snapToGrid)(this.props.grid, deltaX, deltaY);\n        x = this.lastX + deltaX, y = this.lastY + deltaY;\n      }\n      const coreEvent = (0, _positionFns.createCoreData)(this, x, y);\n\n      // Call event handler\n      const shouldContinue = this.props.onStop(e, coreEvent);\n      if (shouldContinue === false || this.mounted === false) return false;\n      const thisNode = this.findDOMNode();\n      if (thisNode) {\n        // Remove user-select hack\n        if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(thisNode.ownerDocument);\n      }\n      (0, _log.default)('DraggableCore: handleDragStop: %j', coreEvent);\n\n      // Reset the el.\n      this.dragging = false;\n      this.lastX = NaN;\n      this.lastY = NaN;\n      if (thisNode) {\n        // Remove event handlers\n        (0, _log.default)('DraggableCore: Removing handlers');\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.move, this.handleDrag);\n        (0, _domFns.removeEvent)(thisNode.ownerDocument, dragEventFor.stop, this.handleDragStop);\n      }\n    });\n    _defineProperty(this, \"onMouseDown\", e => {\n      dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n      return this.handleDragStart(e);\n    });\n    _defineProperty(this, \"onMouseUp\", e => {\n      dragEventFor = eventsFor.mouse;\n      return this.handleDragStop(e);\n    });\n    // Same as onMouseDown (start drag), but now consider this a touch device.\n    _defineProperty(this, \"onTouchStart\", e => {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return this.handleDragStart(e);\n    });\n    _defineProperty(this, \"onTouchEnd\", e => {\n      // We're on a touch device now, so change the event handlers\n      dragEventFor = eventsFor.touch;\n      return this.handleDragStop(e);\n    });\n  }\n  componentDidMount() {\n    this.mounted = true;\n    // Touch handlers must be added with {passive: false} to be cancelable.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    const thisNode = this.findDOMNode();\n    if (thisNode) {\n      (0, _domFns.addEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n        passive: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    this.mounted = false;\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    const thisNode = this.findDOMNode();\n    if (thisNode) {\n      const {\n        ownerDocument\n      } = thisNode;\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.move, this.handleDrag);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.move, this.handleDrag);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.mouse.stop, this.handleDragStop);\n      (0, _domFns.removeEvent)(ownerDocument, eventsFor.touch.stop, this.handleDragStop);\n      (0, _domFns.removeEvent)(thisNode, eventsFor.touch.start, this.onTouchStart, {\n        passive: false\n      });\n      if (this.props.enableUserSelectHack) (0, _domFns.removeUserSelectStyles)(ownerDocument);\n    }\n  }\n\n  // React Strict Mode compatibility: if `nodeRef` is passed, we will use it instead of trying to find\n  // the underlying DOM node ourselves. See the README for more information.\n  findDOMNode() /*: ?HTMLElement*/{\n    var _this$props, _this$props2;\n    return (_this$props = this.props) !== null && _this$props !== void 0 && _this$props.nodeRef ? (_this$props2 = this.props) === null || _this$props2 === void 0 || (_this$props2 = _this$props2.nodeRef) === null || _this$props2 === void 0 ? void 0 : _this$props2.current : _reactDom.default.findDOMNode(this);\n  }\n  render() /*: React.Element<any>*/{\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return /*#__PURE__*/React.cloneElement(React.Children.only(this.props.children), {\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onMouseUp: this.onMouseUp,\n      // onTouchStart is added on `componentDidMount` so they can be added with\n      // {passive: false}, which allows it to cancel. See\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\nexports.default = DraggableCore;\n_defineProperty(DraggableCore, \"displayName\", 'DraggableCore');\n_defineProperty(DraggableCore, \"propTypes\", {\n  /**\n   * `allowAnyClick` allows dragging using any mouse button.\n   * By default, we only accept the left button.\n   *\n   * Defaults to `false`.\n   */\n  allowAnyClick: _propTypes.default.bool,\n  children: _propTypes.default.node.isRequired,\n  /**\n   * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n   * with the exception of `onMouseDown`, will not fire.\n   */\n  disabled: _propTypes.default.bool,\n  /**\n   * By default, we add 'user-select:none' attributes to the document body\n   * to prevent ugly text selection during drag. If this is causing problems\n   * for your app, set this to `false`.\n   */\n  enableUserSelectHack: _propTypes.default.bool,\n  /**\n   * `offsetParent`, if set, uses the passed DOM node to compute drag offsets\n   * instead of using the parent node.\n   */\n  offsetParent: function (props /*: DraggableCoreProps*/, propName /*: $Keys<DraggableCoreProps>*/) {\n    if (props[propName] && props[propName].nodeType !== 1) {\n      throw new Error('Draggable\\'s offsetParent must be a DOM Node.');\n    }\n  },\n  /**\n   * `grid` specifies the x and y that dragging should snap to.\n   */\n  grid: _propTypes.default.arrayOf(_propTypes.default.number),\n  /**\n   * `handle` specifies a selector to be used as the handle that initiates drag.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *         return (\n   *            <Draggable handle=\".handle\">\n   *              <div>\n   *                  <div className=\"handle\">Click me to drag</div>\n   *                  <div>This is some other content</div>\n   *              </div>\n   *           </Draggable>\n   *         );\n   *       }\n   *   });\n   * ```\n   */\n  handle: _propTypes.default.string,\n  /**\n   * `cancel` specifies a selector to be used to prevent drag initialization.\n   *\n   * Example:\n   *\n   * ```jsx\n   *   let App = React.createClass({\n   *       render: function () {\n   *           return(\n   *               <Draggable cancel=\".cancel\">\n   *                   <div>\n   *                     <div className=\"cancel\">You can't drag from here</div>\n   *                     <div>Dragging here works fine</div>\n   *                   </div>\n   *               </Draggable>\n   *           );\n   *       }\n   *   });\n   * ```\n   */\n  cancel: _propTypes.default.string,\n  /* If running in React Strict mode, ReactDOM.findDOMNode() is deprecated.\n   * Unfortunately, in order for <Draggable> to work properly, we need raw access\n   * to the underlying DOM node. If you want to avoid the warning, pass a `nodeRef`\n   * as in this example:\n   *\n   * function MyComponent() {\n   *   const nodeRef = React.useRef(null);\n   *   return (\n   *     <Draggable nodeRef={nodeRef}>\n   *       <div ref={nodeRef}>Example Target</div>\n   *     </Draggable>\n   *   );\n   * }\n   *\n   * This can be used for arbitrarily nested components, so long as the ref ends up\n   * pointing to the actual child DOM node and not a custom component.\n   */\n  nodeRef: _propTypes.default.object,\n  /**\n   * Called when dragging starts.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onStart: _propTypes.default.func,\n  /**\n   * Called while dragging.\n   * If this function returns the boolean false, dragging will be canceled.\n   */\n  onDrag: _propTypes.default.func,\n  /**\n   * Called when dragging stops.\n   * If this function returns the boolean false, the drag will remain active.\n   */\n  onStop: _propTypes.default.func,\n  /**\n   * A workaround option which can be passed if onMouseDown needs to be accessed,\n   * since it'll always be blocked (as there is internal use of onMouseDown)\n   */\n  onMouseDown: _propTypes.default.func,\n  /**\n   * `scale`, if set, applies scaling while dragging an element\n   */\n  scale: _propTypes.default.number,\n  /**\n   * These properties should be defined on the child, not here.\n   */\n  className: _shims.dontSetMe,\n  style: _shims.dontSetMe,\n  transform: _shims.dontSetMe\n});\n_defineProperty(DraggableCore, \"defaultProps\", {\n  allowAnyClick: false,\n  // by default only accept left click\n  disabled: false,\n  enableUserSelectHack: true,\n  onStart: function () {},\n  onDrag: function () {},\n  onStop: function () {},\n  onMouseDown: function () {},\n  scale: 1\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}